<div id="modal" class="modal" style="display:none;">
  <div class="modalContent">
    <div class="modalContent__img">
      <img id="modal-img" src="" alt="" />
    </div>
    <div class="modalContent__text">
      <div class="modalContent__name" id="modal-title"></div>
      <div class="modalContent__detail" id="modal-detail"></div>
    </div>
    <button class="modalContent__closeBtn -pc"></button>
  </div>
  <button class="modalContent__closeBtn -sp"></button>
</div>

<style lang="scss">
  @import "../../styles/mq.scss";

  body:has(.modal.-active) {
    overflow-y: hidden;
  }

  .modal {
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    position: fixed;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.2);
    z-index: 10;
    overflow: auto;

    &.-active {
      opacity: 1;
      visibility: visible;
    }

    .modalContent {
      width: 70vw;
      height: 60vh;
      max-width: 800px;
      overflow-y: auto;
      overflow-x: hidden;
      display: block;
      padding: 30px;
      background-color: white;
      border-radius: 2%;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      scrollbar-color: var(--color-sub) transparent;

      @include mq() {
        height: fit-content;
        display: flex;
        gap: 30px;
      }
    }

    .modalContent__closeBtn {
      background-color: var(--color-sub);
      width: 40px;
      height: 40px;
      border-radius: 50%;
      position: fixed;
      z-index: 100;

      &::before,
      &::after {
        content: "";
        display: block;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 1px;
        position: absolute;
        border-top: 2px solid white;
        border-radius: 2.5px;
      }

      &::before {
        transform: translate(-50%, -50%) rotate(45deg);
      }

      &::after {
        transform: translate(-50%, -50%) rotate(-45deg);
      }

      &.-pc {
        top: 25px;
        right: 30px;
        display: none;

        @include mq() {
          display: block;
        }
      }

      &.-sp {
        top: 14.5%;
        right: 15px;
        display: block;

        @include mq() {
          display: none;
        }
      }
    }

    .modalContent__img {
      width: 100%;
      height: auto;

      @include mq() {
        width: 30%;
        height: 30%;
      }

      > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    .modalContent__text {
      flex: 1;

      .modalContent__name {
        font-size: 1.5rem;
        font-weight: bold;
        color: var(--color--sub);
      }

      .modalContent__detail {
        margin-top: 10px;
      }
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function(){
    const modal = document.getElementById("modal");
    function openModal(modalData: Props["data"]) {
      (document.getElementById("modal-img") as HTMLImageElement).src = modalData.imgSrc;
      (document.getElementById("modal-img") as HTMLImageElement).alt = modalData.title;
      (document.getElementById("modal-title") as HTMLElement).textContent = modalData.title;
      (document.getElementById("modal-detail") as HTMLElement).textContent = modalData.detail;

      if (modal) {
        modal.style.display = "block";
      }
    }

    function closeModal() {
      if (modal){
        modal.style.display = "none";
      }
    }

    document.querySelectorAll(".hasModal").forEach(item => {
      item.addEventListener("click", function(this: HTMLElement) {
        const modalData = JSON.parse(this.dataset.modal ?? "");
        openModal(modalData);
      });
    });

    document.querySelectorAll(".modalContent__closeBtn").forEach(item => {
      item.addEventListener("click", function() {
        closeModal();
      });
    });
  });

  // モーダル外をクリックした場合にモーダルを閉じる
  document.addEventListener("click", (e) => {
    const targetElement = e.target as Element;
    const activeModal = document.querySelector(".modal.-active");

    if (activeModal && !activeModal.querySelector(".modalContent")?.contains(targetElement)) {
      activeModal.classList.remove("-active");
    }
  });
</script>